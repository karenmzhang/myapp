export const levelData = {
    "description": 
    [
	"The method printQuestionMarks should return a string made up of n question marks, where n is an int given as an argument. If n is negative, return an empty string should be returned.\n\nExamples:\nInput = 6, Output = \"??????\" \nInput = 0, Output = \"\"",
	"The method isNegative takes an int as an argument and returns a boolean. It should return true if the given int is negative, and false otherwise. \n\nExamples:\nInput = -3, Output = true \nInput = 5, Output = false",
	"The method lengthGreaterThan3 takes a String as an argument and returns a boolean. It should return true if the given String has more than 3 characters, meaning that its length is greater than 3. It should return false otherwise. \n\nExamples:\nInput = \“hello world\”, Output = true \nInput = \"Hi\", Output = false",
	"The method maxTwoInts takes two ints as arguments and returns the value of the larger argument. You may assume that the two given ints will not be equal to each other. \n\nExamples:\nInput = 1, 4, Output = 4 \nInput = 2, -5, Output = 2",
	"The method arraySum takes an array of ints and should return the sum of all the elements in the array.\n\nExamples:\nInput = [1,2,3], Output = 6\nInput = [2], Output = 2",
	"The method swapEnds takes an array of ints and modifies it by swapping the first and last elements in the array, returning the modified array. You may assume that the provided array will have a length of at least 1.\n\nExamples:\nInput = [1,2,3,4], Output = [4,2,3,1]\nInput = [3,8,10], Output = [10,8,3]",
	"The method lastDigit takes three ints as arguments and returns true if two or more of them have the same rightmost digit. If all three ints have different rightmost digits, return false instead. You may assume that the ints will be non-negative. Hint: the \"%\" sign is the mod operator, meaning it computes the remainder of the first number divided by the second.\n\nExamples:\nInput = 23, 19, 13, Output = true\nInput = 23, 19, 2, Output = false",
	"The method countXes takes a string and returns the number of times the character \'x\' appears in the string. Recall that the charAt(i) function returns the character in a string at position i.\n\nExamples:\nInput = \"xyz\", Output = 1\nInput = \"abcxx\", Output = 2",
	"The method withinRange takes three ints, called \"min\", \"max\", and \"x\", and returns true if \"x\" is between \"min\" and \"max\", inclusive. Otherwise, if \"x\" is not within the range from \"min\" to \"max\", the method should return false.\n\nExamples:\nInput = 1, 3, 2, Output = true\nInput = 2, 6, 6, Output = true\nInput = 1, 3, 4, Output = false ",
	"The method firstHalf takes a string and returns the first half of the string. Recall that calling substring(a, b) on a string returns the substring starting at index a and extending up to, but not including, index b. You may assume that the string will be of even length.\n\nExamples:\nInput = \"WooHoo\", Output = \"Woo\"\nInput =\"HelloThere\", Output = \"Hello\"\nInput = \"ab\", Output = \"a\"",
	"The method divisible5or3 takes an int and returns true if it is evenly divisible by 5 or 3. However, if the given int is divisible by BOTH 5 and 3, return false. If the number if divisible by neither 5 nor 3, also return false.\n\nExamples:\nInput = 9, Output = true\nInput = 15, Output = false\nInput = 25, Output = true\nInput = 1, Output = false",
	"The method helloStrings takes an array of strings and returns a string that begins with \"Hello\", followed by every string in the array separated by a single space.\n\nExamples:\nInput = [\"Alice\", \"and\", \"Bob\"], Output = \"Hello Alice and Bob\"\nInput = [\"World\"], Output = \"Hello World\"",
	"The method shortenArray takes an array of ints and an int n, and returns a new array of length n that only contains the first n entries of the given array. You may assume that n will be less than or equal to the length of the given array.\n\nExamples:\nInput = ([1,2,3,4,5], 3), Output = [1,2,3]\nInput = ([1,2],0), Output = [] ",
	"The method firstLast takes a string s and returns a new string made up of the first character of s followed by the last character of s. You may assume that the length of the given string will be at least 2.\n\nExamples:\nInput = \"Hello\", Output = \"Ho\"\nInput = \"abc\", Output = \"ac\"",
	"The method averageEnds takes an array of ints and modifies the array so that the first and last elements of the array are replaced with the average of the original first and last elements (rounded down to the nearest whole number). You should return the modified array. In other words, the method should calculate the average of the first and last elements of the given array and replace them both with this average. You may assume that the array will be at least length 1.\n\nExamples:\nInput = [1,5,3], Output = [2,5,2]\nInput = [1,0,10,4], Output = [2,0,10,2]",
	"The method moreEvensThanTriples takes an array of ints and returns true if the number of even numbers in the array exceeds the number of triples (multiples of 3). Numbers divisible by both two and three should count towards both the number of evens and the number of triples. If the number of evens is less than or equal to the number of triples in the array, return false.\n\nExamples:\nInput = [2,4], Output = true\nInput = [3,9,12], Output = false",
	"The method divideArray takes an array of doubles and a double n and returns the result of dividing every element in the array by n. However, the returned array should be an array of ints, and you should round down to the nearest integer when calculating the division. In other words, the ith element of the returned array is equal to the ith element of the given array divided by n, and rounded down to the nearest integer.\n\nExamples:\nInput = ([3.0,7.0,11.0], 3.0), Output =[1,2,3]\nInput = ([1.0,2.0,3.0], 2.0), Output = [0,1,1]",
	"The method getShortest takes an array of strings and returns the string from the array with the shortest length. You may assume that the array has length of at least 1.\n\nExamples:\nInput = [\"abc\",\"de\",\"f\"], Output = \"f\"\nInput = [\"hello\",\"hi\",\"goodbye\",\"bye\"], Output = \"hi\"",
	"The method shiftLeft takes an array of ints and returns a new array that is \"left shifted\" by 1, meaning every element moves to left by one position except for the first element, which moves to the end of the array. You may assume that the given array will be of length at least 1.\n\nExamples:\nInput = [6,2,5,3], Output = [2,5,3,6]\nInput = [1,2,3], Output = [2,3,1]",
	"The method no14 takes an array of ints and returns true if the array contains no 1s, OR if it contains no 4s. This means that if the array contains 1s, but no 4s, you should return true. You should also return true if the array contains 4s, but no 1s. Only return false if the array contains both 1s and 4s.\n\nExamples:\nInput = [1,2,3], Output = true\nInput = [1,2,3,4], Output = false\nInput = [2,3,4], Output = true",
	"The method countEvens takes a two-dimensional array of ints and returns a count of the total number of even numbers in the array. You may assume that the array will have at least one row and one column.\n\nExamples:\nInput = [[1,2,3],[4,5,6],[7,8,9]], Output = 4\nInput = [[1,2]], Output = 1",
	"The method countHi takes a string and returns the number of times that the string \"hi\" appears anywhere in the given string. You may assume that the string will be of at least length 1.\n\nExamples:\nInput = \"abc hi ho\", Output = 1\nInput = \"hihi\", Output = 2",
	"The method concatArrays takes two arrays of ints and returns a new array that is the concatenation of the two given arrays. In other words, the returned array should contain all the elements of the first given array followed by all the elements of the second given array.\n\nExamples:\nInput = ([1,2,3],[4,5]), Output = [1,2,3,4,5]\nInput = ([1],[2]), Output = [1,2]",
	"The method firstLast6 takes an array of ints and returns true if the number 6 appears as either the first or last element of the array. You may assume that the array will be of length at least 1.\n\nExamples:\nInput = [6,1], Output = true\nInput = [16,3], Output = false",
	"The method sameEnds takes an array of ints and an int n and returns true if the first n elements of the array are the same as the last n elements of the array. You may assume that n will be less than or equal to the length of the array, and that the array will be of at least length 1.\n\nExamples:\nInput = ([4, 2, 4, 5], 1), Output = false\n\nInput = ([5, 6, 13, 5, 6], 2), Output = true"
    ], 

    "codeHead": 
    [
	"public class Level0_",
	"public class Level1_",
	"public class Level2_",
	"public class Level3_",
	"public class Level4_",
	"public class Level5_",
	"public class Level6_",
	"public class Level7_",
	"public class Level8_",
	"public class Level9_",
	"public class Level10_",
	"public class Level11_",
	"public class Level12_",
	"public class Level13_",
	"public class Level14_",
	"public class Level15_",
	"public class Level16_",
	"public class Level17_",
	"public class Level18_",
	"public class Level19_",
	"public class Level20_",
	"public class Level21_",
	"public class Level22_",
	"public class Level23_",
	"public class Level24_",
	"public class Level25_",
	"public class Level26_",
	"public class Level27_",
	"public class Level28_",
	"public class Level29_",
	"public class Level30_",
	"public class Level31_",
	"public class Level32_",
	"public class Level33_",
	"public class Level34_",
	"public class Level35_",
	"public class Level36_",
	"public class Level37_",
	"public class Level38_",
	"public class Level39_",
	"public class Level40_",
	"public class Level41_",
	"public class Level42_",
	"public class Level43_",
	"public class Level44_",
	"public class Level45_",
	"public class Level46_",
	"public class Level47_",
	"public class Level48_",
	"public class Level49_",
	"public class Level50_",
	"public class Level51_",
	"public class Level52_",
	"public class Level53_",
	"public class Level54_",
	"public class Level55_",
	"public class Level56_",
	"public class Level57_",
	"public class Level58_",
	"public class Level59_",
	"public class Level60_"
    ],

    "className": [
	"Level0",
	"Level1",
	"Level2",
	"Level3",
	"Level4",
	"Level5",
	"Level6",
	"Level7",
	"Level8",
	"Level9",
	"Level10",
	"Level11",
	"Level12",
	"Level13",
	"Level14",
	"Level15",
	"Level16",
	"Level17",
	"Level18",
	"Level19",
	"Level20",
	"Level21",
	"Level22",
	"Level23",
	"Level24",
	"Level25",
	"Level26",
	"Level27",
	"Level28",
	"Level29",
	"Level30",
	"Level31",
	"Level32",
	"Level33",
	"Level34",
	"Level35",
	"Level36",
	"Level37",
	"Level38",
	"Level39",
	"Level40",
	"Level41",
	"Level42",
	"Level43",
	"Level44",
	"Level45",
	"Level46",
	"Level47",
	"Level48",
	"Level49",
	"Level50",
	"Level51",
	"Level52",
	"Level53",
	"Level54",
	"Level55",
	"Level56",
	"Level57",
	"Level58",
	"Level59",
	"Level60"
    ],

    "starterCode":
    [
	" {\n\n  // Debug the code in this method\n  public static String printQuestionMarks(int n) {\n    return \"?\";\n  }\n\n  // You can use the main method to test your code\n  public static void main(String[] args) {\n    \n  }\n}", 
	" {\n\n  // Debug the code in this method\n  public static boolean isNegative(int n) {\n    if (n < 0) {\n      return true\n    }\n    return false;\n  }\n\n  // You can use the main method to test your code\n  public static void main(String[] args) {\n\n  }\n}",
	" {\n\n  // Debug the code in this method\n  public static boolean lengthGreaterThan3(String s) {\n    if (s.length() > 3) {\n      return true\n    }\n    return false\n  }\n\n  public static void main(String[] args) {\n    \n  }\n}",
	" {\n\n  // Debug the code in this method\r\n  public static int maxTwoInts(int a, int b) {\n    if a > b {\n      return a\n    }\n    return b;\n  }\n\n  public static void main(String[] args) {\n    \n  }\n}",
	" {\n\n  // Debug the code in this method\n  public static int arraySum(int[] a) {\n    int sum = 0;\n    for (int i = 0; i < a.length; i++) {\n      sum += a[i];\n    return sum;\n  }\n\n  // You can use the main method to test your code\n  public static void main(String[] args) {\n\n  }\n}",
	" {\n\n  // Debug the code in this method\n  public static int[] swapEnds(int[] a) {\n    n = a.length;\n    first = a[0];\n    last = a[n - 1];\n\n    a[0] = last;\n    a[n - 1] = first;\n\n    return a;\n  }\n\n  // You can use the main method to test your code\n  public static void main(String[] args) {\n\n  }\n}",
	" {\n\n  // Debug the code in this method\n  public static boolean lastDigit(int a, int b, int c) {\n    if (a % 10 = b % 10 || a % 10 = c % 10 || b % 10 = c % 10) {\n      return true;\n    }\n    return false;\n  }\n\n  // You can use the main method to test your code\n  public static void main(String[] args) {\n\n  }\n}",
	" {\n\n  // Debug the code in this method\n  public static int countXes(String s) {\n    int xCount = 0;\n    for (int i = 0, i < s.length(), i++) {\n      if (s.charAt(i) == \'x\') {\n        xCount++;\n      }\n    }\n\n    return xCount;\n  }\n\n  // You can use the main method to test your code\n  public static void main(String[] args) {\n\n  }\n}",
	" {\n\n  // Debug the code in this method\n  public static boolean withinRange(int min, int max, int x) {\n    if (x =< max \&\& x => min) {\n      return true;\n    }\n    return false;\n  }\n\n  // You can use the main method to test your code\n  public static void main(String[] args) {\n\n  }\n}",
	" {\n\n  // Debug the code in this method\n  public static String firstHalf(String s) {\n    int half = s.length/2;\n    return s.substring(0, half);\n  }\n\n  // You can use the main method to test your code\n  public static void main(String[] args) {\n\n  }\n}",
	" {\n\n  // Debug the code in this method\n  public static boolean divisible5or3(int n) {\n    if (n % 5 == 0 || n % 3 == 0); {\n      if (n % 5 == 0 \&\& n % 3 == 0); {\n        return false;\n      }\n      else {\n        return true;\n      }\n    }\n    else {\n      return false;\n    }\n  }\n\n  // You can use the main method to test your code\n  public static void main(String[] args) {\n\n  }\n}",
	" {\n\n  // Debug the code in this method\n  public static String helloStrings(String[] a) {\n    String s = \'Hello\';\n    for (int i = 0; i < a.length; i++) {\n      s = s + \" \" + a[i];\n    }\n    return s;\n  }\n\n  // You can use the main method to test your code\n  public static void main(String[] args) {\n\n  }\n}",
	" {\n\n  // Debug the code in this method\n  public static int[] shortenArray(int[] a, int n) {\n    int[] newArray;\n    for (int i = 0; i < n; i++) {\n      newArray[i] = a[i];\n    }\n    return newArray;\n  }\n\n  // You can use the main method to test your code\n  public static void main(String[] args) {\n\n  }\n}",
	" {\n\n  // Debug the code in this method\n  public static String firstLast(String s) {\n    char first = s.charAt(0);\n    char last = s.charAt(s.length());\n    String result = \"\" + first + last;\n    return result;\n  }\n\n  // You can use the main method to test your code\n  public static void main(String[] args) {\n\n  }\n}",
	" {\n\n  // Debug the code in this method\n  public static int[] averageEnds(int[] a) {\n    int first = a[0];\n    int last = a[a.length];\n    int average = (first + last)/2;\n\n    a[0] = average;\n    a[a.length] = average;\n    return a;\n  }\n\n  // You can use the main method to test your code\n  public static void main(String[] args) {\n\n  }\n}",
	" {\n\n  // Debug the code in this method\n  public static boolean moreEvensThanTriples(int[] a) {\n    int numberOfEvens = 0;\n    int numberOfTriples = 0;\n    for (int i = 0; i < a.length; i++) \n      if (a[i] % 2 == 0) {\n        numberOfEvens++;\n      }\n      if (a[i] % 3 == 0) {\n        numberOfTriples++;\n      }\n\n    if (numberOfEvens > numberOfTriples) {\n      return true;\n    }\n    else {\n      return false;\n    }\n  }\n\n  // You can use the main method to test your code\n  public static void main(String[] args) {\n\n  }\n}",
	" {\n\n  // Debug the code in this method\n  public static int[] divideArray(double[] a, double n) {\n    int[] result = new int[a.length];\n    for (int i = 0; i < a.length; i++) {\n      result[i] = a[i]/n;\n    }\n    return result;\n  }\n\n  // You can use the main method to test your code\n  public static void main(String[] args) {\n\n  }\n}",
	" {\n\n  // Debug the code in this method\n  public static String getShortest(String[] a) {\n    String short = a[0];\n    int shortLength = a[0].length();\n    for (int i = 1; i < a.length; i++) {\n      if (a[i].length() < shortLength) {\n        short = a[i];\n        shortLength = a[i].length();\n      }\n    }\n    return short;\n  }\n\n  // You can use the main method to test your code\n  public static void main(String[] args) {\n\n  }\n}",
	" {\n\n  // Debug the code in this method\n  public static int[] shiftLeft(int[] a) {\n    int[] newArray = new int[a.length];\n    for (int i = 0; i < a.length; i++) {\n      newArray[i] = a[i+1];\n    }\n    return newArray;\n  }\n\n  // You can use the main method to test your code\n  public static void main(String[] args) {\n\n  }\n}",
	" {\n\n  // Debug the code in this method\n  public static boolean no14(int[] a) {\n    boolean no1s = true;\n    boolean no4s = true;\n    for (int i = 0; i < a.length; i++); {\n      if (a[i] == 1) {\n        no1s = false;\n      }\n      if (a[i] == 4) {\n        no4s = false;\n      }\n    }\n\n    if (no1s || no4s) {\n      return true;\n    }\n    else {\n      return false;\n    }\n  }\n\n  // You can use the main method to test your code\n  public static void main(String[] args) {\n\n  }\n}",
	" {\n\n  // Debug the code in this method\n  public static int countEvens(int[][] a) {\n    for (int i = 0; i < a.length; i++) {\n      int count = 0;\n      for (int j = 0; j < a[0].length; j++) {\n        if (a[i][j] % 2 == 0) {\n          count++;\n        }\n      }\n    }\n    return count;\n  }\n\n  // You can use the main method to test your code\n  public static void main(String[] args) {\n\n  }\n}",
	" {\n\n  // Debug the code in this method\n  public static int countHi(String s) {\n    int hiCount = 0;\n    for (int i = 0; i < s.length(); i++) {\n      if (s.substring(i, i+2).equals(\"hi\")) {\n        hiCount++;\n      }\n    }\n    return hiCount;\n  }\n\n  // You can use the main method to test your code\n  public static void main(String[] args) {\n\n  }\n}",
	" {\n\n  // Debug the code in this method\n  public static int[] concatArrays(int[] a1, int[] a2) {\n    int[] result = new int[a1.length + a2.length];\n    for (int i = 0; i < a1.length; i++) {\n      int[] result[i] = a1[i];\n    }\n    for (int j = 0; j < a2.length; j++) {\n      int[] result[a1.length + j] = a2[j];\n    }\n    return result;\n  }\n\n  // You can use the main method to test your code\n  public static void main(String[] args) {\n\n  }\n}",
	" {\n\n  // Debug the code in this method\n  public static boolean firstLast6(int[] a) {\n    int n = a.length;\n    if a(0) == 6 || a(n - 1) == 6 {\n      return true;\n    }\n    return false;\n  }\n\n  // You can use the main method to test your code\n  public static void main(String[] args) {\n\n  }\n}",
	" {\n\n  // Debug the code in this method\n  public static boolean sameEnds(int[] a, int n) {\n    for (i = 0; i < n; i++) {\n      if (a[i] != a[a.length - n + i]) {\n        return false;  \n  }\n\n  // You can use the main method to test your code\n  public static void main(String[] args) {\n\n  }\n}"
    ],

    "methodName": 
    [
	"printQuestionMarks", "isNegative", "lengthGreaterThan3", "maxTwoInts", "arraySum", "swapEnds", "lastDigit", "countXes", "withinRange", "firstHalf", "divisible5or3", "helloStrings", "shortenArray", "firstLast", "averageEnds", "moreEvensThanTriples", "divideArray", "getShortest", "shiftLeft", "no14", "countEvens", "countHi", "concatArrays", "firstLast6", "sameEnds"
    ],

    "numberOfTests": 
    [
	"4","4","5","4","4","4","6","6","6","6","6","5","4","5","6","6","5","6","5","5","6","6","6","0","0","0","0","0","0","0","0","0","0"
    ]
};
